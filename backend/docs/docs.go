// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get information about the currently authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create a new user account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues": {
            "get": {
                "description": "Get a list of all pinball leagues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "List all leagues",
                "responses": {
                    "200": {
                        "description": "List of leagues",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.LeagueResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new pinball league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Create a new league",
                "parameters": [
                    {
                        "description": "League details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "League created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.LeagueResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueID}": {
            "get": {
                "description": "Get detailed information about a specific league",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Get league by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "League details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.LeagueResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid league ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueID}/players": {
            "get": {
                "description": "Get a list of all players in a specific league",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "List players in a league",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of players",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.PlayerResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid league ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueID}/players/ifpa": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add multiple players to a league using their IFPA numbers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Add players to league by IFPA numbers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "IFPA numbers",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Players added successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.PlayerResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or league ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueID}/seasons": {
            "get": {
                "description": "Get a list of all seasons for a specific league",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "List seasons for a league",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of seasons",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SeasonResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid league ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new season for a specific league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Create a new season",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Season details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Season created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.SeasonResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueID}/seasons/{seasonID}/events": {
            "get": {
                "description": "Get a list of all events for a specific season",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List events for a season",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Season ID",
                        "name": "seasonID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.EventResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid league ID or season ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new event for a specific season",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Season ID",
                        "name": "seasonID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.EventResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueID}/seasons/{seasonID}/events/{eventID}": {
            "get": {
                "description": "Get detailed information about a specific event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "League ID",
                        "name": "leagueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Season ID",
                        "name": "seasonID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.EventResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid league ID, season ID, or event ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machines/{opdb_id}": {
            "get": {
                "description": "Get machine details from OPDB API and cache in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "summary": "Get machine details from OPDB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OPDB ID",
                        "name": "opdb_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Machine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seasons/{seasonID}": {
            "get": {
                "description": "Get detailed information about a specific season",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Get a season by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Season ID",
                        "name": "seasonID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Season details",
                        "schema": {
                            "$ref": "#/definitions/handlers.SeasonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid season ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Season not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                    "$ref": "#/definitions/handlers.UserResponse"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request body"
                }
            }
        },
        "handlers.EventResponse": {
            "type": "object",
            "properties": {
                "completedAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "groupOrdering": {
                    "$ref": "#/definitions/models.GroupOrdering"
                },
                "hasWinnersGroup": {
                    "type": "boolean"
                },
                "isComplete": {
                    "type": "boolean"
                },
                "isFinals": {
                    "type": "boolean"
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Machine"
                    }
                },
                "name": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Player"
                    }
                },
                "season": {
                    "$ref": "#/definitions/models.Season"
                },
                "seasonID": {
                    "type": "integer"
                },
                "seedingMethod": {
                    "$ref": "#/definitions/models.SeedingMethod"
                }
            }
        },
        "handlers.LeagueResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "dateCreated": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "location": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "name": {
                    "type": "string",
                    "example": "Downtown Pinball League"
                },
                "owner": {
                    "$ref": "#/definitions/models.SwaggerUser"
                },
                "ownerID": {
                    "type": "integer",
                    "example": 1
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "handlers.ListResponse": {
            "type": "object",
            "properties": {
                "data": {}
            }
        },
        "handlers.PlayerResponse": {
            "type": "object",
            "properties": {
                "ifpaNumber": {
                    "type": "string"
                },
                "league": {
                    "$ref": "#/definitions/models.League"
                },
                "leagueID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.SeasonResponse": {
            "type": "object",
            "properties": {
                "countingGames": {
                    "type": "integer",
                    "example": 5
                },
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "dateCreated": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "eventCount": {
                    "type": "integer",
                    "example": 0
                },
                "hasFinals": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "league": {
                    "$ref": "#/definitions/models.SwaggerLeague"
                },
                "leagueID": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Spring 2024"
                },
                "pointDistribution": {
                    "$ref": "#/definitions/models.PointDistributionMap"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "handlers.UserResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "models.GroupOrdering": {
            "type": "string",
            "enum": [
                "RANDOM",
                "SEEDED"
            ],
            "x-enum-varnames": [
                "GroupOrderingRandom",
                "GroupOrderingSeeded"
            ]
        },
        "models.League": {
            "type": "object",
            "properties": {
                "dateCreated": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/models.User"
                },
                "ownerID": {
                    "type": "integer"
                }
            }
        },
        "models.Machine": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "LastUpdatedAt time.Time ` + "`" + `json:\"last_updated_at\"` + "`" + `",
                    "type": "string"
                },
                "ipdb_id": {
                    "type": "integer"
                },
                "is_alias": {
                    "type": "boolean"
                },
                "is_group": {
                    "type": "boolean"
                },
                "is_pinball": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "opdb_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "year": {
                    "description": "Manufacturer  string    ` + "`" + `json:\"manufacturer\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.Player": {
            "type": "object",
            "properties": {
                "ifpaNumber": {
                    "type": "string"
                },
                "league": {
                    "$ref": "#/definitions/models.League"
                },
                "leagueID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.PointDistributionMap": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "number"
                }
            }
        },
        "models.Season": {
            "type": "object",
            "properties": {
                "countingGames": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "dateCreated": {
                    "type": "string"
                },
                "eventCount": {
                    "type": "integer"
                },
                "hasFinals": {
                    "type": "boolean"
                },
                "league": {
                    "$ref": "#/definitions/models.League"
                },
                "leagueID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pointDistribution": {
                    "$ref": "#/definitions/models.PointDistributionMap"
                }
            }
        },
        "models.SeedingMethod": {
            "type": "string",
            "enum": [
                "AVERAGE",
                "RANK",
                "RANDOM",
                "IFPA_RANK"
            ],
            "x-enum-varnames": [
                "SeedingMethodAverage",
                "SeedingMethodRank",
                "SeedingMethodRandom",
                "SeedingMethodIFPARank"
            ]
        },
        "models.SwaggerLeague": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "dateCreated": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "location": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "name": {
                    "type": "string",
                    "example": "Downtown Pinball League"
                },
                "owner": {
                    "$ref": "#/definitions/models.SwaggerUser"
                },
                "ownerID": {
                    "type": "integer",
                    "example": 1
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "models.SwaggerUser": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "leagues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.League"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Pinball League API",
	Description:      "A Pinball League Management System API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
